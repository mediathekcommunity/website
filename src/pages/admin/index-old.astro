---
import AdminLayout from "../../layouts/AdminLayout.astro";

// Authentication check
const isAuthenticated = Astro.locals.isAuthenticated;
if (!isAuthenticated) {
	return Astro.redirect('/login');
}

// Fetch content statistics from API
let contentStats = { movies: 0, series: 0, yMovies: 0, ySeries: 0, total: 0 };
let channelStats = { total: 0, countries: 0 };
let recentContent = [];

try {
	// Get content data
	const contentRes = await fetch(
		`${Astro.url.origin}/api/list-content?source=local`,
	);
	const contentData = await contentRes.json();

	if (contentData.success && contentData.files) {
		const files = contentData.files;
		contentStats.total = files.length;
		contentStats.movies = files.filter(
			(item: any) => item.type === "movie",
		).length;
		contentStats.series = files.filter(
			(item: any) => item.type === "series",
		).length;
		contentStats.yMovies = files.filter(
			(item: any) => item.type === "y-movie",
		).length;
		contentStats.ySeries = files.filter(
			(item: any) => item.type === "y-series",
		).length;

		// Get 5 most recent items
		recentContent = files.slice(0, 5);
	}

	// Get channel data
	const channelsRes = await fetch(
		`${Astro.url.origin}/api/channels?source=local`,
	);
	const channelsData = await channelsRes.json();

	if (channelsData.success && channelsData.channels) {
		channelStats.total = channelsData.channels.length;
		const countries = new Set(
			channelsData.channels.map((ch: any) => ch.country),
		);
		channelStats.countries = countries.size;
	}
} catch (error) {
}
---

<AdminLayout>
  <!-- Dashboard Header -->
  <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 mb-8">
    <div>
      <h1 class="text-3xl font-bold text-base-content">Dashboard Overview</h1>
      <p class="text-base-content/70 mt-1">Monitor your content library and system health</p>
    </div>
    <div class="flex gap-2">
      <a href="/admin/content/create" class="btn btn-primary gap-2">
        <span>➕</span>
        New Content
      </a>
      <button class="btn btn-outline gap-2" onclick="location.reload()">
        <span>🔄</span>
        Refresh
      </button>
    </div>
  </div>

  <!-- Main Statistics -->
  <div class="stats stats-vertical lg:stats-horizontal shadow mb-8 w-full">
    <div class="stat place-items-center">
      <div class="stat-figure text-primary">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 110 2h-1v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4z" />
        </svg>
      </div>
      <div class="stat-title">Total Content</div>
      <div class="stat-value text-primary">{contentStats.total}</div>
      <div class="stat-desc">All media items</div>
    </div>

    <div class="stat place-items-center">
      <div class="stat-figure text-secondary">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 110 2h-1v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4z" />
        </svg>
      </div>
      <div class="stat-title">Movies</div>
      <div class="stat-value text-secondary">{contentStats.movies}</div>
      <div class="stat-desc">Feature films</div>
    </div>

    <div class="stat place-items-center">
      <div class="stat-figure text-accent">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 110 2h-1v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4z" />
        </svg>
      </div>
      <div class="stat-title">Series</div>
      <div class="stat-value text-accent">{contentStats.series}</div>
      <div class="stat-desc">TV Shows</div>
    </div>

    <div class="stat place-items-center">
      <div class="stat-figure text-info">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 4V2a1 1 0 011-1h8a1 1 0 011 1v2h4a1 1 0 110 2h-1v14a2 2 0 01-2 2H6a2 2 0 01-2-2V6H3a1 1 0 110-2h4z" />
        </svg>
      </div>
      <div class="stat-title">Channels</div>
      <div class="stat-value text-info">{channelStats.total}</div>
      <div class="stat-desc">{channelStats.countries} countries</div>
    </div>
  </div>

  <!-- Content breakdown and Recent Activity -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <!-- Content Type Breakdown -->
    <div class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <h2 class="card-title gap-2">
          <span>📊</span>
          Content Breakdown
        </h2>
        <div class="space-y-3">
          <div class="flex justify-between items-center">
            <span class="text-sm">Adult Movies</span>
            <div class="flex items-center gap-2">
              <progress class="progress progress-primary w-20" value={contentStats.movies} max={contentStats.total}></progress>
              <span class="badge badge-primary badge-sm">{contentStats.movies}</span>
            </div>
          </div>
          <div class="flex justify-between items-center">
            <span class="text-sm">Adult Series</span>
            <div class="flex items-center gap-2">
              <progress class="progress progress-secondary w-20" value={contentStats.series} max={contentStats.total}></progress>
              <span class="badge badge-secondary badge-sm">{contentStats.series}</span>
            </div>
          </div>
          <div class="flex justify-between items-center">
            <span class="text-sm">Youth Movies</span>
            <div class="flex items-center gap-2">
              <progress class="progress progress-accent w-20" value={contentStats.yMovies} max={contentStats.total}></progress>
              <span class="badge badge-accent badge-sm">{contentStats.yMovies}</span>
            </div>
          </div>
          <div class="flex justify-between items-center">
            <span class="text-sm">Youth Series</span>
            <div class="flex items-center gap-2">
              <progress class="progress progress-info w-20" value={contentStats.ySeries} max={contentStats.total}></progress>
              <span class="badge badge-info badge-sm">{contentStats.ySeries}</span>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Recent Content -->
    <div class="card bg-base-100 shadow-xl lg:col-span-2">
      <div class="card-body">
        <h2 class="card-title gap-2">
          <span>🕒</span>
          Recent Content
        </h2>
        <div class="overflow-x-auto">
          <table class="table table-xs">
            <thead>
              <tr>
                <th>Title</th>
                <th>Type</th>
                <th>Last Modified</th>
                <th>Actions</th>
              </tr>
            </thead>
            <tbody>
              {recentContent.map((item: any) => (
                <tr>
                  <td>
                    <div class="font-medium truncate max-w-xs" title={item.title}>
                      {item.title || item.id}
                    </div>
                  </td>
                  <td>
                    <span class={`badge badge-sm ${
                      item.type === 'movie' ? 'badge-primary' :
                      item.type === 'series' ? 'badge-secondary' :
                      item.type === 'y-movie' ? 'badge-accent' :
                      'badge-info'
                    }`}>
                      {item.type}
                    </span>
                  </td>
                  <td class="text-xs opacity-70">
                    {new Date(item.lastModified).toLocaleDateString()}
                  </td>
                  <td>
                    <a href={`/admin/content/edit/${item.id}`} class="btn btn-ghost btn-xs">
                      Edit
                    </a>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
          {recentContent.length === 0 && (
            <div class="text-center py-8 text-base-content/50">
              No recent content found
            </div>
          )}
        </div>
        <div class="card-actions justify-end">
          <a href="/admin/content" class="btn btn-primary btn-sm">View All Content</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Quick Actions Grid -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
    <a href="/admin/content/create" class="card bg-gradient-to-br from-primary to-primary/80 text-primary-content shadow-xl hover:shadow-2xl transition-all">
      <div class="card-body items-center text-center">
        <span class="text-3xl mb-2">➕</span>
        <h3 class="card-title text-sm">Create Content</h3>
        <p class="text-xs opacity-80">Add new movies or series</p>
      </div>
    </a>

    <a href="/admin/content" class="card bg-gradient-to-br from-secondary to-secondary/80 text-secondary-content shadow-xl hover:shadow-2xl transition-all">
      <div class="card-body items-center text-center">
        <span class="text-3xl mb-2">📋</span>
        <h3 class="card-title text-sm">Manage Content</h3>
        <p class="text-xs opacity-80">Edit existing content</p>
      </div>
    </a>

    <a href="/admin/channels" class="card bg-gradient-to-br from-accent to-accent/80 text-accent-content shadow-xl hover:shadow-2xl transition-all">
      <div class="card-body items-center text-center">
        <span class="text-3xl mb-2">📺</span>
        <h3 class="card-title text-sm">Channels</h3>
        <p class="text-xs opacity-80">Manage TV channels</p>
      </div>
    </a>

    <a href="/admin/health" class="card bg-gradient-to-br from-info to-info/80 text-info-content shadow-xl hover:shadow-2xl transition-all">
      <div class="card-body items-center text-center">
        <span class="text-3xl mb-2">❤️</span>
        <h3 class="card-title text-sm">System Health</h3>
        <p class="text-xs opacity-80">Monitor system status</p>
      </div>
    </a>
  </div>

  <!-- Analytics Dashboard -->
  <div class="grid grid-cols-1 lg:grid-cols-3 gap-6 mb-8">
    <!-- Content Growth Chart -->
    <div class="card bg-base-100 shadow-xl lg:col-span-2">
      <div class="card-body">
        <h2 class="card-title gap-2 mb-4">
          <span>📈</span>
          Content Growth
        </h2>
        <div class="flex justify-center items-center h-48 bg-base-200 rounded-lg">
          <div class="text-center">
            <div class="text-4xl mb-2">📊</div>
            <p class="text-base-content/60">Analytics chart placeholder</p>
            <p class="text-xs text-base-content/40">Chart.js or similar library integration</p>
          </div>
        </div>
        <div class="grid grid-cols-3 gap-4 mt-4">
          <div class="text-center">
            <div class="text-lg font-bold text-primary">+{Math.floor(Math.random() * 20) + 5}</div>
            <div class="text-xs opacity-60">This Month</div>
          </div>
          <div class="text-center">
            <div class="text-lg font-bold text-secondary">+{Math.floor(Math.random() * 50) + 10}</div>
            <div class="text-xs opacity-60">This Year</div>
          </div>
          <div class="text-center">
            <div class="text-lg font-bold text-accent">{Math.floor(Math.random() * 10) + 15}%</div>
            <div class="text-xs opacity-60">Growth Rate</div>
          </div>
        </div>
      </div>
    </div>

    <!-- Top Channels -->
    <div class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <h2 class="card-title gap-2 mb-4">
          <span>🏆</span>
          Top Channels
        </h2>
        <div class="space-y-3">
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-2">
              <span class="fi fi-de w-4 h-3"></span>
              <span class="text-sm font-medium">ARD</span>
            </div>
            <div class="flex items-center gap-2">
              <progress class="progress progress-primary w-16 h-2" value="95" max="100"></progress>
              <span class="text-xs opacity-60">95%</span>
            </div>
          </div>
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-2">
              <span class="fi fi-de w-4 h-3"></span>
              <span class="text-sm font-medium">ZDF</span>
            </div>
            <div class="flex items-center gap-2">
              <progress class="progress progress-secondary w-16 h-2" value="87" max="100"></progress>
              <span class="text-xs opacity-60">87%</span>
            </div>
          </div>
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-2">
              <span class="fi fi-us w-4 h-3"></span>
              <span class="text-sm font-medium">CNN</span>
            </div>
            <div class="flex items-center gap-2">
              <progress class="progress progress-accent w-16 h-2" value="78" max="100"></progress>
              <span class="text-xs opacity-60">78%</span>
            </div>
          </div>
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-2">
              <span class="fi fi-gb w-4 h-3"></span>
              <span class="text-sm font-medium">BBC</span>
            </div>
            <div class="flex items-center gap-2">
              <progress class="progress progress-info w-16 h-2" value="72" max="100"></progress>
              <span class="text-xs opacity-60">72%</span>
            </div>
          </div>
        </div>
        <div class="card-actions justify-end mt-4">
          <a href="/admin/channels" class="btn btn-sm btn-outline">View All</a>
        </div>
      </div>
    </div>
  </div>

  <!-- Real-time Activity Feed -->
  <div class="card bg-base-100 shadow-xl mb-8">
    <div class="card-body">
      <h2 class="card-title gap-2 mb-4">
        <span>⚡</span>
        Real-time Activity
        <span class="badge badge-success badge-sm">Live</span>
      </h2>
      
      <ul class="timeline timeline-compact">
        <li>
          <div class="timeline-start timeline-box text-xs">
            <div class="flex items-center gap-2">
              <span class="text-success">●</span>
              <span>Just now</span>
            </div>
            <div class="font-medium">New content added: "Action Movie 2024"</div>
          </div>
          <div class="timeline-middle">
            <span class="badge badge-xs badge-success"></span>
          </div>
          <hr class="bg-success" />
        </li>
        <li>
          <hr class="bg-info" />
          <div class="timeline-start timeline-box text-xs">
            <div class="flex items-center gap-2">
              <span class="text-info">●</span>
              <span>2 min ago</span>
            </div>
            <div class="font-medium">Channel stream validated: ARD HD</div>
          </div>
          <div class="timeline-middle">
            <span class="badge badge-xs badge-info"></span>
          </div>
          <hr class="bg-warning" />
        </li>
        <li>
          <hr class="bg-warning" />
          <div class="timeline-start timeline-box text-xs">
            <div class="flex items-center gap-2">
              <span class="text-warning">●</span>
              <span>5 min ago</span>
            </div>
            <div class="font-medium">Database backup completed</div>
          </div>
          <div class="timeline-middle">
            <span class="badge badge-xs badge-warning"></span>
          </div>
          <hr />
        </li>
        <li>
          <hr />
          <div class="timeline-start timeline-box text-xs">
            <div class="flex items-center gap-2">
              <span class="text-base-content/50">●</span>
              <span>10 min ago</span>
            </div>
            <div class="font-medium">System health check passed</div>
          </div>
          <div class="timeline-middle">
            <span class="badge badge-xs"></span>
          </div>
        </li>
      </ul>
      
      <div class="card-actions justify-between mt-4">
        <div class="text-xs text-base-content/60">
          Auto-refreshing every 30 seconds
        </div>
        <button class="btn btn-sm btn-ghost" onclick="refreshActivity()">
          <span class="loading loading-spinner loading-xs hidden" id="activity-loader"></span>
          <span id="refresh-text">Refresh</span>
        </button>
      </div>
    </div>
  </div>

  <!-- Media Library Status -->
  <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
    <div class="card bg-gradient-to-br from-primary/10 to-primary/5 border border-primary/20">
      <div class="card-body items-center text-center p-4">
        <div class="radial-progress text-primary" style="--value:92;" role="progressbar">92%</div>
        <h3 class="font-bold text-sm mt-2">Content Quality</h3>
        <p class="text-xs opacity-60">HD+ Streams</p>
      </div>
    </div>

    <div class="card bg-gradient-to-br from-secondary/10 to-secondary/5 border border-secondary/20">
      <div class="card-body items-center text-center p-4">
        <div class="radial-progress text-secondary" style="--value:78;" role="progressbar">78%</div>
        <h3 class="font-bold text-sm mt-2">Stream Health</h3>
        <p class="text-xs opacity-60">Active Channels</p>
      </div>
    </div>

    <div class="card bg-gradient-to-br from-accent/10 to-accent/5 border border-accent/20">
      <div class="card-body items-center text-center p-4">
        <div class="radial-progress text-accent" style="--value:85;" role="progressbar">85%</div>
        <h3 class="font-bold text-sm mt-2">Metadata</h3>
        <p class="text-xs opacity-60">Complete Info</p>
      </div>
    </div>

    <div class="card bg-gradient-to-br from-info/10 to-info/5 border border-info/20">
      <div class="card-body items-center text-center p-4">
        <div class="radial-progress text-info" style="--value:96;" role="progressbar">96%</div>
        <h3 class="font-bold text-sm mt-2">Database</h3>
        <p class="text-xs opacity-60">Sync Status</p>
      </div>
    </div>
  </div>

  <!-- Advanced Dashboard Controls -->
  <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
    <!-- Bulk Operations -->
    <div class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <h2 class="card-title gap-2 mb-4">
          <span>⚡</span>
          Bulk Operations
        </h2>
        <div class="space-y-3">
          <button class="btn btn-outline w-full justify-start gap-3" onclick="bulkMetadataUpdate()">
            <span>🔄</span>
            Update All Metadata
          </button>
          <button class="btn btn-outline w-full justify-start gap-3" onclick="validateAllStreams()">
            <span>🔍</span>
            Validate All Streams
          </button>
          <button class="btn btn-outline w-full justify-start gap-3" onclick="optimizeDatabase()">
            <span>🗃️</span>
            Optimize Database
          </button>
          <button class="btn btn-outline w-full justify-start gap-3" onclick="generateReports()">
            <span>📊</span>
            Generate Reports
          </button>
        </div>
      </div>
    </div>

    <!-- Quick Insights -->
    <div class="card bg-base-100 shadow-xl">
      <div class="card-body">
        <h2 class="card-title gap-2 mb-4">
          <span>💡</span>
          Quick Insights
        </h2>
        <div class="space-y-4">
          <div class="alert alert-info">
            <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-4 w-4" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div class="text-xs">
              <div class="font-bold">Peak Usage: 3-6 PM</div>
              <div>Consider content optimization during these hours</div>
            </div>
          </div>
          <div class="alert alert-success">
            <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-4 w-4" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <div class="text-xs">
              <div class="font-bold">98.5% Uptime This Month</div>
              <div>System performing excellently</div>
            </div>
          </div>
          <div class="alert alert-warning">
            <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-4 w-4" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z" />
            </svg>
            <div class="text-xs">
              <div class="font-bold">5 Channels Need Attention</div>
              <div>Some streams may be experiencing issues</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- System Status Footer -->
  <div class="stats stats-horizontal shadow mb-8">
    <div class="stat place-items-center">
      <div class="stat-title">Database</div>
      <div class="stat-value text-success text-lg">
        <span id="db-source-display">Local</span>
      </div>
      <div class="stat-desc">Active Source</div>
    </div>
    <div class="stat place-items-center">
      <div class="stat-title">Last Backup</div>
      <div class="stat-value text-info text-lg">2h ago</div>
      <div class="stat-desc">Automatic</div>
    </div>
    <div class="stat place-items-center">
      <div class="stat-title">System Status</div>
      <div class="stat-value text-success text-lg">
        <div class="flex items-center gap-2">
          <span class="w-3 h-3 bg-success rounded-full animate-pulse"></span>
          Online
        </div>
      </div>
      <div class="stat-desc">All Systems Operational</div>
    </div>
    <div class="stat place-items-center">
      <div class="stat-title">Last Updated</div>
      <div class="stat-value text-base-content text-sm">{new Date().toLocaleTimeString()}</div>
      <div class="stat-desc">{new Date().toLocaleDateString()}</div>
    </div>
  </div>
</AdminLayout>

<script>
  // Enhanced dashboard functionality
  document.addEventListener('DOMContentLoaded', function() {
    // Initialize real-time features
    initializeRealTimeUpdates();
    updateSystemMetrics();
    
    // Listen for database source changes
    window.addEventListener('dbSourceChanged', function(event) {
      const dbDisplay = document.getElementById('db-source-display');
      if (dbDisplay) {
        dbDisplay.textContent = event.detail.source === 'cloud' ? 'Cloud' : 'Local';
      }
    });
  });

  // Real-time activity updates
  function initializeRealTimeUpdates() {
    // Simulate real-time activity updates
    setInterval(addRandomActivity, 30000); // Add new activity every 30 seconds
    
    // Update performance metrics
    setInterval(updateSystemMetrics, 15000); // Update metrics every 15 seconds
  }

  function addRandomActivity() {
    const activities = [
      { text: 'New content synchronized', type: 'success', icon: '🔄' },
      { text: 'Channel stream validated', type: 'info', icon: '📺' },
      { text: 'Health check completed', type: 'success', icon: '❤️' },
      { text: 'Metadata updated', type: 'info', icon: '📝' },
      { text: 'Database backup created', type: 'warning', icon: '💾' }
    ];
    
    const activity = activities[Math.floor(Math.random() * activities.length)];
    const timeline = document.querySelector('.timeline');
    
    if (timeline) {
      // Create new timeline item
      const newItem = document.createElement('li');
      newItem.innerHTML = `
        <div class="timeline-start timeline-box text-xs">
          <div class="flex items-center gap-2">
            <span class="text-${activity.type}">●</span>
            <span>Just now</span>
          </div>
          <div class="font-medium">${activity.text}</div>
        </div>
        <div class="timeline-middle">
          <span class="badge badge-xs badge-${activity.type}"></span>
        </div>
        <hr class="bg-${activity.type}" />
      `;
      
      // Add to top of timeline
      timeline.insertBefore(newItem, timeline.firstChild);
      
      // Remove last item to maintain list size
      const items = timeline.querySelectorAll('li');
      if (items.length > 4) {
        timeline.removeChild(items[items.length - 1]);
      }
      
      // Update timestamps for existing items
      updateActivityTimestamps();
    }
  }

  function updateActivityTimestamps() {
    const timeElements = document.querySelectorAll('.timeline-start .flex span:last-child');
    const timestamps = ['Just now', '2 min ago', '5 min ago', '10 min ago'];
    
    timeElements.forEach((element, index) => {
      if (timestamps[index]) {
        element.textContent = timestamps[index];
      }
    });
  }

  function updateSystemMetrics() {
    // Update radial progress indicators with random realistic values
    const progressElements = document.querySelectorAll('.radial-progress');
    
    progressElements.forEach((element, index) => {
      const currentValue = parseInt(element.style.getPropertyValue('--value')) || 0;
      const variation = Math.floor(Math.random() * 10) - 5; // -5 to +5 variation
      const newValue = Math.max(10, Math.min(95, currentValue + variation));
      
      element.style.setProperty('--value', newValue);
      element.textContent = newValue + '%';
    });
  }

  function refreshActivity() {
    const loader = document.getElementById('activity-loader');
    const refreshText = document.getElementById('refresh-text');
    
    if (loader && refreshText) {
      loader.classList.remove('hidden');
      refreshText.textContent = 'Refreshing...';
      
      setTimeout(() => {
        addRandomActivity();
        loader.classList.add('hidden');
        refreshText.textContent = 'Refresh';
      }, 1000);
    }
  }

  // Bulk operation functions
  async function bulkMetadataUpdate() {
    if (confirm('Update metadata for all content? This may take several minutes.')) {
      showOperationToast('Bulk metadata update started', 'info');
      
      // Simulate operation
      setTimeout(() => {
        showOperationToast('Metadata update completed successfully', 'success');
      }, 3000);
    }
  }

  async function validateAllStreams() {
    if (confirm('Validate all channel streams? This will check connectivity for all channels.')) {
      showOperationToast('Stream validation started', 'info');
      
      // Simulate operation
      setTimeout(() => {
        showOperationToast('Stream validation completed - 2 issues found', 'warning');
      }, 2500);
    }
  }

  async function optimizeDatabase() {
    if (confirm('Optimize database? This may temporarily affect performance.')) {
      showOperationToast('Database optimization started', 'info');
      
      // Simulate operation
      setTimeout(() => {
        showOperationToast('Database optimization completed', 'success');
      }, 4000);
    }
  }

  async function generateReports() {
    showOperationToast('Generating reports...', 'info');
    
    // Simulate operation
    setTimeout(() => {
      showOperationToast('Reports generated and saved to downloads', 'success');
    }, 2000);
  }

  function showOperationToast(message, type = 'info') {
    const toast = document.createElement('div');
    toast.className = 'toast toast-top toast-end z-50';
    
    const alertClass = type === 'success' ? 'alert-success' : 
                     type === 'warning' ? 'alert-warning' : 
                     type === 'error' ? 'alert-error' : 'alert-info';
    
    toast.innerHTML = `
      <div class="alert ${alertClass}">
        <span>${message}</span>
        <button onclick="this.parentElement.parentElement.remove()" class="btn btn-ghost btn-xs">✕</button>
      </div>
    `;
    
    document.body.appendChild(toast);
    
    // Auto remove after 5 seconds
    setTimeout(() => {
      if (document.body.contains(toast)) {
        document.body.removeChild(toast);
      }
    }, 5000);
  }

  // Auto-refresh dashboard data every 2 minutes
  setInterval(async () => {
    try {
      // Refresh content stats
      const response = await fetch(window.location.href);
      if (response.ok) {
        // Update specific dashboard elements without full page reload
      }
    } catch (error) {
      // Handle refresh errors silently
    }
  }, 120000);
</script>
